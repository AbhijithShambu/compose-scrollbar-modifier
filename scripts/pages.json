[{"name":"abstract fun drawWithMeasurements(measurements: ScrollbarMeasurements, drawScrollbarAndIndicator: DrawScope.() -> Unit): ScrollbarMeasurementResult","description":"com.shambu.compose.scrollbar.ScrollbarLayoutScope.drawWithMeasurements","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout-scope/draw-with-measurements.html","searchKeys":["drawWithMeasurements","abstract fun drawWithMeasurements(measurements: ScrollbarMeasurements, drawScrollbarAndIndicator: DrawScope.() -> Unit): ScrollbarMeasurementResult","com.shambu.compose.scrollbar.ScrollbarLayoutScope.drawWithMeasurements"]},{"name":"class DefaultScrollbarLayoutScope(drawScope: DrawScope, scrollbarState: ScrollbarState, val density: Float, val fontScale: Float) : ScrollbarLayoutScope","description":"com.shambu.compose.scrollbar.DefaultScrollbarLayoutScope","location":"lib/com.shambu.compose.scrollbar/-default-scrollbar-layout-scope/index.html","searchKeys":["DefaultScrollbarLayoutScope","class DefaultScrollbarLayoutScope(drawScope: DrawScope, scrollbarState: ScrollbarState, val density: Float, val fontScale: Float) : ScrollbarLayoutScope","com.shambu.compose.scrollbar.DefaultScrollbarLayoutScope"]},{"name":"class ScrollbarLayout(val layoutDirection: LayoutDirection, val orientation: Orientation, val viewPortLength: Float, val viewPortCrossAxisLength: Float, val contentLength: Float, val contentOffset: Int, val scrollbarAlpha: Float, val density: Float, val fontScale: Float) : Density","description":"com.shambu.compose.scrollbar.ScrollbarLayout","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/index.html","searchKeys":["ScrollbarLayout","class ScrollbarLayout(val layoutDirection: LayoutDirection, val orientation: Orientation, val viewPortLength: Float, val viewPortCrossAxisLength: Float, val contentLength: Float, val contentOffset: Int, val scrollbarAlpha: Float, val density: Float, val fontScale: Float) : Density","com.shambu.compose.scrollbar.ScrollbarLayout"]},{"name":"class ScrollbarMeasurementResult","description":"com.shambu.compose.scrollbar.ScrollbarMeasurementResult","location":"lib/com.shambu.compose.scrollbar/-scrollbar-measurement-result/index.html","searchKeys":["ScrollbarMeasurementResult","class ScrollbarMeasurementResult","com.shambu.compose.scrollbar.ScrollbarMeasurementResult"]},{"name":"class ScrollbarState","description":"com.shambu.compose.scrollbar.ScrollbarState","location":"lib/com.shambu.compose.scrollbar/-scrollbar-state/index.html","searchKeys":["ScrollbarState","class ScrollbarState","com.shambu.compose.scrollbar.ScrollbarState"]},{"name":"constructor(barBounds: Rect, indicatorBounds: Rect, alpha: Float)","description":"com.shambu.compose.scrollbar.ScrollbarMeasurements.ScrollbarMeasurements","location":"lib/com.shambu.compose.scrollbar/-scrollbar-measurements/-scrollbar-measurements.html","searchKeys":["ScrollbarMeasurements","constructor(barBounds: Rect, indicatorBounds: Rect, alpha: Float)","com.shambu.compose.scrollbar.ScrollbarMeasurements.ScrollbarMeasurements"]},{"name":"constructor(brush: (bounds: Rect) -> Brush)","description":"com.shambu.compose.scrollbar.ColorType.Gradient.Gradient","location":"lib/com.shambu.compose.scrollbar/-color-type/-gradient/-gradient.html","searchKeys":["Gradient","constructor(brush: (bounds: Rect) -> Brush)","com.shambu.compose.scrollbar.ColorType.Gradient.Gradient"]},{"name":"constructor(color: Color)","description":"com.shambu.compose.scrollbar.ColorType.Solid.Solid","location":"lib/com.shambu.compose.scrollbar/-color-type/-solid/-solid.html","searchKeys":["Solid","constructor(color: Color)","com.shambu.compose.scrollbar.ColorType.Solid.Solid"]},{"name":"constructor(color: ColorType, width: Dp, miter: Dp? = null, cap: StrokeCap = DefaultCap, join: StrokeJoin = DefaultJoin, pathEffect: PathEffect? = null)","description":"com.shambu.compose.scrollbar.BorderStyle.BorderStyle","location":"lib/com.shambu.compose.scrollbar/-border-style/-border-style.html","searchKeys":["BorderStyle","constructor(color: ColorType, width: Dp, miter: Dp? = null, cap: StrokeCap = DefaultCap, join: StrokeJoin = DefaultJoin, pathEffect: PathEffect? = null)","com.shambu.compose.scrollbar.BorderStyle.BorderStyle"]},{"name":"constructor(drawScope: DrawScope, scrollbarState: ScrollbarState, density: Float, fontScale: Float)","description":"com.shambu.compose.scrollbar.DefaultScrollbarLayoutScope.DefaultScrollbarLayoutScope","location":"lib/com.shambu.compose.scrollbar/-default-scrollbar-layout-scope/-default-scrollbar-layout-scope.html","searchKeys":["DefaultScrollbarLayoutScope","constructor(drawScope: DrawScope, scrollbarState: ScrollbarState, density: Float, fontScale: Float)","com.shambu.compose.scrollbar.DefaultScrollbarLayoutScope.DefaultScrollbarLayoutScope"]},{"name":"constructor(indicatorThickness: Dp = 8.dp, indicatorCornerRadius: Dp = indicatorThickness / 2, indicatorColor: ColorType = ColorType.Solid(Color.DarkGray.copy(alpha = 0.75f)), indicatorBorder: BorderStyle = BorderStyle(ColorType.Solid(Color.Transparent), 0.dp), minimumIndicatorLength: Dp = 24.dp, maximumIndicatorLength: Dp = Dp.Infinity, barThickness: Dp = indicatorThickness, barCornerRadius: Dp = barThickness / 2, barColor: ColorType = ColorType.Solid(Color.LightGray.copy(alpha = 0.75f)), barBorder: BorderStyle = BorderStyle(ColorType.Solid(Color.Transparent), 0.dp), showAlways: Boolean = false, autoHideAnimationSpec: AnimationSpec<Float>? = null, padding: PaddingValues = PaddingValues(all = 0.dp), indicatorPadding: PaddingValues = PaddingValues(all = 0.dp), isDragEnabled: Boolean = true)","description":"com.shambu.compose.scrollbar.ScrollbarConfig.ScrollbarConfig","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/-scrollbar-config.html","searchKeys":["ScrollbarConfig","constructor(indicatorThickness: Dp = 8.dp, indicatorCornerRadius: Dp = indicatorThickness / 2, indicatorColor: ColorType = ColorType.Solid(Color.DarkGray.copy(alpha = 0.75f)), indicatorBorder: BorderStyle = BorderStyle(ColorType.Solid(Color.Transparent), 0.dp), minimumIndicatorLength: Dp = 24.dp, maximumIndicatorLength: Dp = Dp.Infinity, barThickness: Dp = indicatorThickness, barCornerRadius: Dp = barThickness / 2, barColor: ColorType = ColorType.Solid(Color.LightGray.copy(alpha = 0.75f)), barBorder: BorderStyle = BorderStyle(ColorType.Solid(Color.Transparent), 0.dp), showAlways: Boolean = false, autoHideAnimationSpec: AnimationSpec<Float>? = null, padding: PaddingValues = PaddingValues(all = 0.dp), indicatorPadding: PaddingValues = PaddingValues(all = 0.dp), isDragEnabled: Boolean = true)","com.shambu.compose.scrollbar.ScrollbarConfig.ScrollbarConfig"]},{"name":"constructor(layoutDirection: LayoutDirection, orientation: Orientation, viewPortLength: Float, viewPortCrossAxisLength: Float, contentLength: Float, contentOffset: Int, scrollbarAlpha: Float, density: Float, fontScale: Float)","description":"com.shambu.compose.scrollbar.ScrollbarLayout.ScrollbarLayout","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/-scrollbar-layout.html","searchKeys":["ScrollbarLayout","constructor(layoutDirection: LayoutDirection, orientation: Orientation, viewPortLength: Float, viewPortCrossAxisLength: Float, contentLength: Float, contentOffset: Int, scrollbarAlpha: Float, density: Float, fontScale: Float)","com.shambu.compose.scrollbar.ScrollbarLayout.ScrollbarLayout"]},{"name":"data class BorderStyle(val color: ColorType, val width: Dp, val miter: Dp? = null, val cap: StrokeCap = DefaultCap, val join: StrokeJoin = DefaultJoin, val pathEffect: PathEffect? = null)","description":"com.shambu.compose.scrollbar.BorderStyle","location":"lib/com.shambu.compose.scrollbar/-border-style/index.html","searchKeys":["BorderStyle","data class BorderStyle(val color: ColorType, val width: Dp, val miter: Dp? = null, val cap: StrokeCap = DefaultCap, val join: StrokeJoin = DefaultJoin, val pathEffect: PathEffect? = null)","com.shambu.compose.scrollbar.BorderStyle"]},{"name":"data class Gradient(val brush: (bounds: Rect) -> Brush) : ColorType","description":"com.shambu.compose.scrollbar.ColorType.Gradient","location":"lib/com.shambu.compose.scrollbar/-color-type/-gradient/index.html","searchKeys":["Gradient","data class Gradient(val brush: (bounds: Rect) -> Brush) : ColorType","com.shambu.compose.scrollbar.ColorType.Gradient"]},{"name":"data class ScrollbarConfig(val indicatorThickness: Dp = 8.dp, val indicatorCornerRadius: Dp = indicatorThickness / 2, val indicatorColor: ColorType = ColorType.Solid(Color.DarkGray.copy(alpha = 0.75f)), val indicatorBorder: BorderStyle = BorderStyle(ColorType.Solid(Color.Transparent), 0.dp), val minimumIndicatorLength: Dp = 24.dp, val maximumIndicatorLength: Dp = Dp.Infinity, val barThickness: Dp = indicatorThickness, val barCornerRadius: Dp = barThickness / 2, val barColor: ColorType = ColorType.Solid(Color.LightGray.copy(alpha = 0.75f)), val barBorder: BorderStyle = BorderStyle(ColorType.Solid(Color.Transparent), 0.dp), val showAlways: Boolean = false, val autoHideAnimationSpec: AnimationSpec<Float>? = null, val padding: PaddingValues = PaddingValues(all = 0.dp), val indicatorPadding: PaddingValues = PaddingValues(all = 0.dp), val isDragEnabled: Boolean = true)","description":"com.shambu.compose.scrollbar.ScrollbarConfig","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/index.html","searchKeys":["ScrollbarConfig","data class ScrollbarConfig(val indicatorThickness: Dp = 8.dp, val indicatorCornerRadius: Dp = indicatorThickness / 2, val indicatorColor: ColorType = ColorType.Solid(Color.DarkGray.copy(alpha = 0.75f)), val indicatorBorder: BorderStyle = BorderStyle(ColorType.Solid(Color.Transparent), 0.dp), val minimumIndicatorLength: Dp = 24.dp, val maximumIndicatorLength: Dp = Dp.Infinity, val barThickness: Dp = indicatorThickness, val barCornerRadius: Dp = barThickness / 2, val barColor: ColorType = ColorType.Solid(Color.LightGray.copy(alpha = 0.75f)), val barBorder: BorderStyle = BorderStyle(ColorType.Solid(Color.Transparent), 0.dp), val showAlways: Boolean = false, val autoHideAnimationSpec: AnimationSpec<Float>? = null, val padding: PaddingValues = PaddingValues(all = 0.dp), val indicatorPadding: PaddingValues = PaddingValues(all = 0.dp), val isDragEnabled: Boolean = true)","com.shambu.compose.scrollbar.ScrollbarConfig"]},{"name":"data class ScrollbarMeasurements(val barBounds: Rect, val indicatorBounds: Rect, val alpha: Float)","description":"com.shambu.compose.scrollbar.ScrollbarMeasurements","location":"lib/com.shambu.compose.scrollbar/-scrollbar-measurements/index.html","searchKeys":["ScrollbarMeasurements","data class ScrollbarMeasurements(val barBounds: Rect, val indicatorBounds: Rect, val alpha: Float)","com.shambu.compose.scrollbar.ScrollbarMeasurements"]},{"name":"data class Solid(val color: Color) : ColorType","description":"com.shambu.compose.scrollbar.ColorType.Solid","location":"lib/com.shambu.compose.scrollbar/-color-type/-solid/index.html","searchKeys":["Solid","data class Solid(val color: Color) : ColorType","com.shambu.compose.scrollbar.ColorType.Solid"]},{"name":"fun DrawScope.drawDefaultScrollbar(measurements: ScrollbarMeasurements, config: ScrollbarConfig)","description":"com.shambu.compose.scrollbar.drawDefaultScrollbar","location":"lib/com.shambu.compose.scrollbar/draw-default-scrollbar.html","searchKeys":["drawDefaultScrollbar","fun DrawScope.drawDefaultScrollbar(measurements: ScrollbarMeasurements, config: ScrollbarConfig)","com.shambu.compose.scrollbar.drawDefaultScrollbar"]},{"name":"fun Modifier.horizontalScrollWithScrollbar(scrollState: ScrollState, scrollbarState: ScrollbarState, enabled: Boolean = true, flingBehavior: FlingBehavior? = null, reverseScrolling: Boolean = false, alwaysShowScrollbar: Boolean = false, autoHideScrollbarAnimationSpec: AnimationSpec<Float>? = null, enableScrollbarDrag: Boolean = true, onMeasureAndDrawScrollbar: ScrollbarMeasureAndDraw): Modifier","description":"com.shambu.compose.scrollbar.horizontalScrollWithScrollbar","location":"lib/com.shambu.compose.scrollbar/horizontal-scroll-with-scrollbar.html","searchKeys":["horizontalScrollWithScrollbar","fun Modifier.horizontalScrollWithScrollbar(scrollState: ScrollState, scrollbarState: ScrollbarState, enabled: Boolean = true, flingBehavior: FlingBehavior? = null, reverseScrolling: Boolean = false, alwaysShowScrollbar: Boolean = false, autoHideScrollbarAnimationSpec: AnimationSpec<Float>? = null, enableScrollbarDrag: Boolean = true, onMeasureAndDrawScrollbar: ScrollbarMeasureAndDraw): Modifier","com.shambu.compose.scrollbar.horizontalScrollWithScrollbar"]},{"name":"fun Modifier.horizontalScrollWithScrollbar(scrollState: ScrollState, scrollbarState: ScrollbarState, enabled: Boolean = true, flingBehavior: FlingBehavior? = null, reverseScrolling: Boolean = false, scrollbarConfig: ScrollbarConfig = ScrollbarConfig(), onDrawScrollbar: DrawScope.(measurements: ScrollbarMeasurements) -> Unit = { measurements ->\n        drawDefaultScrollbar(measurements, scrollbarConfig)\n    }): Modifier","description":"com.shambu.compose.scrollbar.horizontalScrollWithScrollbar","location":"lib/com.shambu.compose.scrollbar/horizontal-scroll-with-scrollbar.html","searchKeys":["horizontalScrollWithScrollbar","fun Modifier.horizontalScrollWithScrollbar(scrollState: ScrollState, scrollbarState: ScrollbarState, enabled: Boolean = true, flingBehavior: FlingBehavior? = null, reverseScrolling: Boolean = false, scrollbarConfig: ScrollbarConfig = ScrollbarConfig(), onDrawScrollbar: DrawScope.(measurements: ScrollbarMeasurements) -> Unit = { measurements ->\n        drawDefaultScrollbar(measurements, scrollbarConfig)\n    }): Modifier","com.shambu.compose.scrollbar.horizontalScrollWithScrollbar"]},{"name":"fun Modifier.scrollbar(scrollState: ScrollState, scrollbarState: ScrollbarState, direction: Orientation, config: ScrollbarConfig = ScrollbarConfig(), onDraw: DrawScope.(measurements: ScrollbarMeasurements) -> Unit = { measurements ->\n        drawDefaultScrollbar(measurements, config)\n    }): Modifier","description":"com.shambu.compose.scrollbar.scrollbar","location":"lib/com.shambu.compose.scrollbar/scrollbar.html","searchKeys":["scrollbar","fun Modifier.scrollbar(scrollState: ScrollState, scrollbarState: ScrollbarState, direction: Orientation, config: ScrollbarConfig = ScrollbarConfig(), onDraw: DrawScope.(measurements: ScrollbarMeasurements) -> Unit = { measurements ->\n        drawDefaultScrollbar(measurements, config)\n    }): Modifier","com.shambu.compose.scrollbar.scrollbar"]},{"name":"fun Modifier.scrollbar(scrollState: ScrollState, scrollbarState: ScrollbarState, direction: Orientation, showAlways: Boolean = false, autoHideAnimationSpec: AnimationSpec<Float>? = null, isDragEnabled: Boolean = true, onMeasureAndDraw: ScrollbarMeasureAndDraw): Modifier","description":"com.shambu.compose.scrollbar.scrollbar","location":"lib/com.shambu.compose.scrollbar/scrollbar.html","searchKeys":["scrollbar","fun Modifier.scrollbar(scrollState: ScrollState, scrollbarState: ScrollbarState, direction: Orientation, showAlways: Boolean = false, autoHideAnimationSpec: AnimationSpec<Float>? = null, isDragEnabled: Boolean = true, onMeasureAndDraw: ScrollbarMeasureAndDraw): Modifier","com.shambu.compose.scrollbar.scrollbar"]},{"name":"fun Modifier.verticalScrollWithScrollbar(scrollState: ScrollState, scrollbarState: ScrollbarState, enabled: Boolean = true, flingBehavior: FlingBehavior? = null, reverseScrolling: Boolean = false, alwaysShowScrollbar: Boolean = false, autoHideScrollbarAnimationSpec: AnimationSpec<Float>? = null, enableScrollbarDrag: Boolean = true, onMeasureAndDrawScrollbar: ScrollbarMeasureAndDraw): Modifier","description":"com.shambu.compose.scrollbar.verticalScrollWithScrollbar","location":"lib/com.shambu.compose.scrollbar/vertical-scroll-with-scrollbar.html","searchKeys":["verticalScrollWithScrollbar","fun Modifier.verticalScrollWithScrollbar(scrollState: ScrollState, scrollbarState: ScrollbarState, enabled: Boolean = true, flingBehavior: FlingBehavior? = null, reverseScrolling: Boolean = false, alwaysShowScrollbar: Boolean = false, autoHideScrollbarAnimationSpec: AnimationSpec<Float>? = null, enableScrollbarDrag: Boolean = true, onMeasureAndDrawScrollbar: ScrollbarMeasureAndDraw): Modifier","com.shambu.compose.scrollbar.verticalScrollWithScrollbar"]},{"name":"fun Modifier.verticalScrollWithScrollbar(scrollState: ScrollState, scrollbarState: ScrollbarState, enabled: Boolean = true, flingBehavior: FlingBehavior? = null, reverseScrolling: Boolean = false, scrollbarConfig: ScrollbarConfig = ScrollbarConfig(), onDrawScrollbar: DrawScope.(measurements: ScrollbarMeasurements) -> Unit = { measurements ->\n        drawDefaultScrollbar(measurements, scrollbarConfig)\n    }): Modifier","description":"com.shambu.compose.scrollbar.verticalScrollWithScrollbar","location":"lib/com.shambu.compose.scrollbar/vertical-scroll-with-scrollbar.html","searchKeys":["verticalScrollWithScrollbar","fun Modifier.verticalScrollWithScrollbar(scrollState: ScrollState, scrollbarState: ScrollbarState, enabled: Boolean = true, flingBehavior: FlingBehavior? = null, reverseScrolling: Boolean = false, scrollbarConfig: ScrollbarConfig = ScrollbarConfig(), onDrawScrollbar: DrawScope.(measurements: ScrollbarMeasurements) -> Unit = { measurements ->\n        drawDefaultScrollbar(measurements, scrollbarConfig)\n    }): Modifier","com.shambu.compose.scrollbar.verticalScrollWithScrollbar"]},{"name":"fun Rect.applyPadding(density: Density, paddingValues: PaddingValues, layoutDirection: LayoutDirection): Rect","description":"com.shambu.compose.scrollbar.applyPadding","location":"lib/com.shambu.compose.scrollbar/apply-padding.html","searchKeys":["applyPadding","fun Rect.applyPadding(density: Density, paddingValues: PaddingValues, layoutDirection: LayoutDirection): Rect","com.shambu.compose.scrollbar.applyPadding"]},{"name":"fun calculateBarLength(topPadding: Float = 0.0f, startPadding: Float = 0.0f, bottomPadding: Float = 0.0f, endPadding: Float = 0.0f): Float","description":"com.shambu.compose.scrollbar.ScrollbarLayout.calculateBarLength","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/calculate-bar-length.html","searchKeys":["calculateBarLength","fun calculateBarLength(topPadding: Float = 0.0f, startPadding: Float = 0.0f, bottomPadding: Float = 0.0f, endPadding: Float = 0.0f): Float","com.shambu.compose.scrollbar.ScrollbarLayout.calculateBarLength"]},{"name":"fun calculateIndicatorLength(scrollbarLength: Float, minimumIndicatorLength: Float = 24.0f, maximumIndicatorLength: Float = Float.MAX_VALUE): Float","description":"com.shambu.compose.scrollbar.ScrollbarLayout.calculateIndicatorLength","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/calculate-indicator-length.html","searchKeys":["calculateIndicatorLength","fun calculateIndicatorLength(scrollbarLength: Float, minimumIndicatorLength: Float = 24.0f, maximumIndicatorLength: Float = Float.MAX_VALUE): Float","com.shambu.compose.scrollbar.ScrollbarLayout.calculateIndicatorLength"]},{"name":"fun calculateIndicatorOffset(scrollbarLength: Float, indicatorLength: Float): Float","description":"com.shambu.compose.scrollbar.ScrollbarLayout.calculateIndicatorOffset","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/calculate-indicator-offset.html","searchKeys":["calculateIndicatorOffset","fun calculateIndicatorOffset(scrollbarLength: Float, indicatorLength: Float): Float","com.shambu.compose.scrollbar.ScrollbarLayout.calculateIndicatorOffset"]},{"name":"fun rememberScrollbarState(): ScrollbarState","description":"com.shambu.compose.scrollbar.rememberScrollbarState","location":"lib/com.shambu.compose.scrollbar/remember-scrollbar-state.html","searchKeys":["rememberScrollbarState","fun rememberScrollbarState(): ScrollbarState","com.shambu.compose.scrollbar.rememberScrollbarState"]},{"name":"interface ScrollbarLayoutScope : Density","description":"com.shambu.compose.scrollbar.ScrollbarLayoutScope","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout-scope/index.html","searchKeys":["ScrollbarLayoutScope","interface ScrollbarLayoutScope : Density","com.shambu.compose.scrollbar.ScrollbarLayoutScope"]},{"name":"open override fun drawWithMeasurements(measurements: ScrollbarMeasurements, drawScrollbarAndIndicator: DrawScope.() -> Unit): ScrollbarMeasurementResult","description":"com.shambu.compose.scrollbar.DefaultScrollbarLayoutScope.drawWithMeasurements","location":"lib/com.shambu.compose.scrollbar/-default-scrollbar-layout-scope/draw-with-measurements.html","searchKeys":["drawWithMeasurements","open override fun drawWithMeasurements(measurements: ScrollbarMeasurements, drawScrollbarAndIndicator: DrawScope.() -> Unit): ScrollbarMeasurementResult","com.shambu.compose.scrollbar.DefaultScrollbarLayoutScope.drawWithMeasurements"]},{"name":"open override val density: Float","description":"com.shambu.compose.scrollbar.DefaultScrollbarLayoutScope.density","location":"lib/com.shambu.compose.scrollbar/-default-scrollbar-layout-scope/density.html","searchKeys":["density","open override val density: Float","com.shambu.compose.scrollbar.DefaultScrollbarLayoutScope.density"]},{"name":"open override val density: Float","description":"com.shambu.compose.scrollbar.ScrollbarLayout.density","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/density.html","searchKeys":["density","open override val density: Float","com.shambu.compose.scrollbar.ScrollbarLayout.density"]},{"name":"open override val fontScale: Float","description":"com.shambu.compose.scrollbar.DefaultScrollbarLayoutScope.fontScale","location":"lib/com.shambu.compose.scrollbar/-default-scrollbar-layout-scope/font-scale.html","searchKeys":["fontScale","open override val fontScale: Float","com.shambu.compose.scrollbar.DefaultScrollbarLayoutScope.fontScale"]},{"name":"open override val fontScale: Float","description":"com.shambu.compose.scrollbar.ScrollbarLayout.fontScale","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/font-scale.html","searchKeys":["fontScale","open override val fontScale: Float","com.shambu.compose.scrollbar.ScrollbarLayout.fontScale"]},{"name":"sealed interface ColorType","description":"com.shambu.compose.scrollbar.ColorType","location":"lib/com.shambu.compose.scrollbar/-color-type/index.html","searchKeys":["ColorType","sealed interface ColorType","com.shambu.compose.scrollbar.ColorType"]},{"name":"typealias ScrollbarMeasureAndDraw = ScrollbarLayoutScope.(layout: ScrollbarLayout) -> ScrollbarMeasurementResult","description":"com.shambu.compose.scrollbar.ScrollbarMeasureAndDraw","location":"lib/com.shambu.compose.scrollbar/-scrollbar-measure-and-draw/index.html","searchKeys":["ScrollbarMeasureAndDraw","typealias ScrollbarMeasureAndDraw = ScrollbarLayoutScope.(layout: ScrollbarLayout) -> ScrollbarMeasurementResult","com.shambu.compose.scrollbar.ScrollbarMeasureAndDraw"]},{"name":"val ColorType.isTransparent: Boolean","description":"com.shambu.compose.scrollbar.isTransparent","location":"lib/com.shambu.compose.scrollbar/is-transparent.html","searchKeys":["isTransparent","val ColorType.isTransparent: Boolean","com.shambu.compose.scrollbar.isTransparent"]},{"name":"val alpha: Float","description":"com.shambu.compose.scrollbar.ScrollbarMeasurements.alpha","location":"lib/com.shambu.compose.scrollbar/-scrollbar-measurements/alpha.html","searchKeys":["alpha","val alpha: Float","com.shambu.compose.scrollbar.ScrollbarMeasurements.alpha"]},{"name":"val autoHideAnimationSpec: AnimationSpec<Float>? = null","description":"com.shambu.compose.scrollbar.ScrollbarConfig.autoHideAnimationSpec","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/auto-hide-animation-spec.html","searchKeys":["autoHideAnimationSpec","val autoHideAnimationSpec: AnimationSpec<Float>? = null","com.shambu.compose.scrollbar.ScrollbarConfig.autoHideAnimationSpec"]},{"name":"val barBorder: BorderStyle","description":"com.shambu.compose.scrollbar.ScrollbarConfig.barBorder","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/bar-border.html","searchKeys":["barBorder","val barBorder: BorderStyle","com.shambu.compose.scrollbar.ScrollbarConfig.barBorder"]},{"name":"val barBounds: Rect","description":"com.shambu.compose.scrollbar.ScrollbarMeasurements.barBounds","location":"lib/com.shambu.compose.scrollbar/-scrollbar-measurements/bar-bounds.html","searchKeys":["barBounds","val barBounds: Rect","com.shambu.compose.scrollbar.ScrollbarMeasurements.barBounds"]},{"name":"val barColor: ColorType","description":"com.shambu.compose.scrollbar.ScrollbarConfig.barColor","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/bar-color.html","searchKeys":["barColor","val barColor: ColorType","com.shambu.compose.scrollbar.ScrollbarConfig.barColor"]},{"name":"val barCornerRadius: Dp","description":"com.shambu.compose.scrollbar.ScrollbarConfig.barCornerRadius","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/bar-corner-radius.html","searchKeys":["barCornerRadius","val barCornerRadius: Dp","com.shambu.compose.scrollbar.ScrollbarConfig.barCornerRadius"]},{"name":"val barLength: Float","description":"com.shambu.compose.scrollbar.ScrollbarState.barLength","location":"lib/com.shambu.compose.scrollbar/-scrollbar-state/bar-length.html","searchKeys":["barLength","val barLength: Float","com.shambu.compose.scrollbar.ScrollbarState.barLength"]},{"name":"val barThickness: Dp","description":"com.shambu.compose.scrollbar.ScrollbarConfig.barThickness","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/bar-thickness.html","searchKeys":["barThickness","val barThickness: Dp","com.shambu.compose.scrollbar.ScrollbarConfig.barThickness"]},{"name":"val brush: (bounds: Rect) -> Brush","description":"com.shambu.compose.scrollbar.ColorType.Gradient.brush","location":"lib/com.shambu.compose.scrollbar/-color-type/-gradient/brush.html","searchKeys":["brush","val brush: (bounds: Rect) -> Brush","com.shambu.compose.scrollbar.ColorType.Gradient.brush"]},{"name":"val cap: StrokeCap","description":"com.shambu.compose.scrollbar.BorderStyle.cap","location":"lib/com.shambu.compose.scrollbar/-border-style/cap.html","searchKeys":["cap","val cap: StrokeCap","com.shambu.compose.scrollbar.BorderStyle.cap"]},{"name":"val color: Color","description":"com.shambu.compose.scrollbar.ColorType.Solid.color","location":"lib/com.shambu.compose.scrollbar/-color-type/-solid/color.html","searchKeys":["color","val color: Color","com.shambu.compose.scrollbar.ColorType.Solid.color"]},{"name":"val color: ColorType","description":"com.shambu.compose.scrollbar.BorderStyle.color","location":"lib/com.shambu.compose.scrollbar/-border-style/color.html","searchKeys":["color","val color: ColorType","com.shambu.compose.scrollbar.BorderStyle.color"]},{"name":"val contentLength: Float","description":"com.shambu.compose.scrollbar.ScrollbarLayout.contentLength","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/content-length.html","searchKeys":["contentLength","val contentLength: Float","com.shambu.compose.scrollbar.ScrollbarLayout.contentLength"]},{"name":"val contentOffset: Int","description":"com.shambu.compose.scrollbar.ScrollbarLayout.contentOffset","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/content-offset.html","searchKeys":["contentOffset","val contentOffset: Int","com.shambu.compose.scrollbar.ScrollbarLayout.contentOffset"]},{"name":"val dragBounds: Rect","description":"com.shambu.compose.scrollbar.ScrollbarState.dragBounds","location":"lib/com.shambu.compose.scrollbar/-scrollbar-state/drag-bounds.html","searchKeys":["dragBounds","val dragBounds: Rect","com.shambu.compose.scrollbar.ScrollbarState.dragBounds"]},{"name":"val indicatorBorder: BorderStyle","description":"com.shambu.compose.scrollbar.ScrollbarConfig.indicatorBorder","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/indicator-border.html","searchKeys":["indicatorBorder","val indicatorBorder: BorderStyle","com.shambu.compose.scrollbar.ScrollbarConfig.indicatorBorder"]},{"name":"val indicatorBounds: Rect","description":"com.shambu.compose.scrollbar.ScrollbarMeasurements.indicatorBounds","location":"lib/com.shambu.compose.scrollbar/-scrollbar-measurements/indicator-bounds.html","searchKeys":["indicatorBounds","val indicatorBounds: Rect","com.shambu.compose.scrollbar.ScrollbarMeasurements.indicatorBounds"]},{"name":"val indicatorColor: ColorType","description":"com.shambu.compose.scrollbar.ScrollbarConfig.indicatorColor","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/indicator-color.html","searchKeys":["indicatorColor","val indicatorColor: ColorType","com.shambu.compose.scrollbar.ScrollbarConfig.indicatorColor"]},{"name":"val indicatorCornerRadius: Dp","description":"com.shambu.compose.scrollbar.ScrollbarConfig.indicatorCornerRadius","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/indicator-corner-radius.html","searchKeys":["indicatorCornerRadius","val indicatorCornerRadius: Dp","com.shambu.compose.scrollbar.ScrollbarConfig.indicatorCornerRadius"]},{"name":"val indicatorLength: Float","description":"com.shambu.compose.scrollbar.ScrollbarState.indicatorLength","location":"lib/com.shambu.compose.scrollbar/-scrollbar-state/indicator-length.html","searchKeys":["indicatorLength","val indicatorLength: Float","com.shambu.compose.scrollbar.ScrollbarState.indicatorLength"]},{"name":"val indicatorPadding: PaddingValues","description":"com.shambu.compose.scrollbar.ScrollbarConfig.indicatorPadding","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/indicator-padding.html","searchKeys":["indicatorPadding","val indicatorPadding: PaddingValues","com.shambu.compose.scrollbar.ScrollbarConfig.indicatorPadding"]},{"name":"val indicatorThickness: Dp","description":"com.shambu.compose.scrollbar.ScrollbarConfig.indicatorThickness","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/indicator-thickness.html","searchKeys":["indicatorThickness","val indicatorThickness: Dp","com.shambu.compose.scrollbar.ScrollbarConfig.indicatorThickness"]},{"name":"val isDragEnabled: Boolean = true","description":"com.shambu.compose.scrollbar.ScrollbarConfig.isDragEnabled","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/is-drag-enabled.html","searchKeys":["isDragEnabled","val isDragEnabled: Boolean = true","com.shambu.compose.scrollbar.ScrollbarConfig.isDragEnabled"]},{"name":"val join: StrokeJoin","description":"com.shambu.compose.scrollbar.BorderStyle.join","location":"lib/com.shambu.compose.scrollbar/-border-style/join.html","searchKeys":["join","val join: StrokeJoin","com.shambu.compose.scrollbar.BorderStyle.join"]},{"name":"val layoutDirection: LayoutDirection","description":"com.shambu.compose.scrollbar.ScrollbarLayout.layoutDirection","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/layout-direction.html","searchKeys":["layoutDirection","val layoutDirection: LayoutDirection","com.shambu.compose.scrollbar.ScrollbarLayout.layoutDirection"]},{"name":"val maximumIndicatorLength: Dp","description":"com.shambu.compose.scrollbar.ScrollbarConfig.maximumIndicatorLength","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/maximum-indicator-length.html","searchKeys":["maximumIndicatorLength","val maximumIndicatorLength: Dp","com.shambu.compose.scrollbar.ScrollbarConfig.maximumIndicatorLength"]},{"name":"val minimumIndicatorLength: Dp","description":"com.shambu.compose.scrollbar.ScrollbarConfig.minimumIndicatorLength","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/minimum-indicator-length.html","searchKeys":["minimumIndicatorLength","val minimumIndicatorLength: Dp","com.shambu.compose.scrollbar.ScrollbarConfig.minimumIndicatorLength"]},{"name":"val miter: Dp? = null","description":"com.shambu.compose.scrollbar.BorderStyle.miter","location":"lib/com.shambu.compose.scrollbar/-border-style/miter.html","searchKeys":["miter","val miter: Dp? = null","com.shambu.compose.scrollbar.BorderStyle.miter"]},{"name":"val orientation: Orientation","description":"com.shambu.compose.scrollbar.ScrollbarLayout.orientation","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/orientation.html","searchKeys":["orientation","val orientation: Orientation","com.shambu.compose.scrollbar.ScrollbarLayout.orientation"]},{"name":"val padding: PaddingValues","description":"com.shambu.compose.scrollbar.ScrollbarConfig.padding","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/padding.html","searchKeys":["padding","val padding: PaddingValues","com.shambu.compose.scrollbar.ScrollbarConfig.padding"]},{"name":"val pathEffect: PathEffect? = null","description":"com.shambu.compose.scrollbar.BorderStyle.pathEffect","location":"lib/com.shambu.compose.scrollbar/-border-style/path-effect.html","searchKeys":["pathEffect","val pathEffect: PathEffect? = null","com.shambu.compose.scrollbar.BorderStyle.pathEffect"]},{"name":"val scrollbarAlpha: Float","description":"com.shambu.compose.scrollbar.ScrollbarLayout.scrollbarAlpha","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/scrollbar-alpha.html","searchKeys":["scrollbarAlpha","val scrollbarAlpha: Float","com.shambu.compose.scrollbar.ScrollbarLayout.scrollbarAlpha"]},{"name":"val showAlways: Boolean = false","description":"com.shambu.compose.scrollbar.ScrollbarConfig.showAlways","location":"lib/com.shambu.compose.scrollbar/-scrollbar-config/show-always.html","searchKeys":["showAlways","val showAlways: Boolean = false","com.shambu.compose.scrollbar.ScrollbarConfig.showAlways"]},{"name":"val viewPortCrossAxisLength: Float","description":"com.shambu.compose.scrollbar.ScrollbarLayout.viewPortCrossAxisLength","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/view-port-cross-axis-length.html","searchKeys":["viewPortCrossAxisLength","val viewPortCrossAxisLength: Float","com.shambu.compose.scrollbar.ScrollbarLayout.viewPortCrossAxisLength"]},{"name":"val viewPortLength: Float","description":"com.shambu.compose.scrollbar.ScrollbarLayout.viewPortLength","location":"lib/com.shambu.compose.scrollbar/-scrollbar-layout/view-port-length.html","searchKeys":["viewPortLength","val viewPortLength: Float","com.shambu.compose.scrollbar.ScrollbarLayout.viewPortLength"]},{"name":"val width: Dp","description":"com.shambu.compose.scrollbar.BorderStyle.width","location":"lib/com.shambu.compose.scrollbar/-border-style/width.html","searchKeys":["width","val width: Dp","com.shambu.compose.scrollbar.BorderStyle.width"]},{"name":"var barBounds: Rect","description":"com.shambu.compose.scrollbar.ScrollbarState.barBounds","location":"lib/com.shambu.compose.scrollbar/-scrollbar-state/bar-bounds.html","searchKeys":["barBounds","var barBounds: Rect","com.shambu.compose.scrollbar.ScrollbarState.barBounds"]},{"name":"var contentLength: Float","description":"com.shambu.compose.scrollbar.ScrollbarState.contentLength","location":"lib/com.shambu.compose.scrollbar/-scrollbar-state/content-length.html","searchKeys":["contentLength","var contentLength: Float","com.shambu.compose.scrollbar.ScrollbarState.contentLength"]},{"name":"var indicatorBounds: Rect","description":"com.shambu.compose.scrollbar.ScrollbarState.indicatorBounds","location":"lib/com.shambu.compose.scrollbar/-scrollbar-state/indicator-bounds.html","searchKeys":["indicatorBounds","var indicatorBounds: Rect","com.shambu.compose.scrollbar.ScrollbarState.indicatorBounds"]},{"name":"var indicatorOffset: Float","description":"com.shambu.compose.scrollbar.ScrollbarState.indicatorOffset","location":"lib/com.shambu.compose.scrollbar/-scrollbar-state/indicator-offset.html","searchKeys":["indicatorOffset","var indicatorOffset: Float","com.shambu.compose.scrollbar.ScrollbarState.indicatorOffset"]},{"name":"var isScrollbarDragActive: Boolean","description":"com.shambu.compose.scrollbar.ScrollbarState.isScrollbarDragActive","location":"lib/com.shambu.compose.scrollbar/-scrollbar-state/is-scrollbar-drag-active.html","searchKeys":["isScrollbarDragActive","var isScrollbarDragActive: Boolean","com.shambu.compose.scrollbar.ScrollbarState.isScrollbarDragActive"]}]